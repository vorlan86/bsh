
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
Terraform will perform the following actions:

  # azurerm_network_interface.primary[0] will be created
  + resource "azurerm_network_interface" "primary" {
      + applied_dns_servers         = (known after apply)
      + id                          = (known after apply)
      + internal_domain_name_suffix = (known after apply)
      + location                    = "westeurope"
      + mac_address                 = (known after apply)
      + name                        = "bsh-tst-we-001-nic"
      + private_ip_address          = (known after apply)
      + private_ip_addresses        = (known after apply)
      + resource_group_name         = "bsh-tst-we-rg"
      + virtual_machine_id          = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "testconfiguration1"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface.primary[1] will be created
  + resource "azurerm_network_interface" "primary" {
      + applied_dns_servers         = (known after apply)
      + id                          = (known after apply)
      + internal_domain_name_suffix = (known after apply)
      + location                    = "westeurope"
      + mac_address                 = (known after apply)
      + name                        = "bsh-tst-we-002-nic"
      + private_ip_address          = (known after apply)
      + private_ip_addresses        = (known after apply)
      + resource_group_name         = "bsh-tst-we-rg"
      + virtual_machine_id          = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "testconfiguration1"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_resource_group.primary will be created
  + resource "azurerm_resource_group" "primary" {
      + id       = (known after apply)
      + location = "westeurope"
      + name     = "bsh-tst-we-rg"
      + tags     = {
          + "managedBy" = "Terraform"
          + "owner"     = "catalin.marin"
          + "project"   = "bsh"
          + "region"    = "WestEurope"
        }
    }

  # azurerm_subnet.primary will be created
  + resource "azurerm_subnet" "primary" {
      + address_prefixes                              = [
          + "10.0.0.0/18",
        ]
      + default_outbound_access_enabled               = true
      + id                                            = (known after apply)
      + name                                          = "bsh-tst-we-subnet"
      + private_endpoint_network_policies             = "Disabled"
      + private_link_service_network_policies_enabled = true
      + resource_group_name                           = "bsh-tst-we-rg"
      + virtual_network_name                          = "bsh-tst-we-vnet"
    }

  # azurerm_virtual_machine.main[0] will be created
  + resource "azurerm_virtual_machine" "main" {
      + availability_set_id              = (known after apply)
      + delete_data_disks_on_termination = true
      + delete_os_disk_on_termination    = true
      + id                               = (known after apply)
      + license_type                     = (known after apply)
      + location                         = "westeurope"
      + name                             = "bsh-tst-we-001-vm"
      + network_interface_ids            = (known after apply)
      + resource_group_name              = "bsh-tst-we-rg"
      + tags                             = {
          + "managedBy" = "Terraform"
          + "owner"     = "catalin.marin"
          + "project"   = "bsh"
          + "region"    = "WestEurope"
        }
      + vm_size                          = "Standard_DS1_v2"

      + os_profile {
          # At least one attribute in this block is (or was) sensitive,
          # so its contents will not be displayed.
        }

      + os_profile_linux_config {
          + disable_password_authentication = false
        }

      + storage_image_reference {
          + offer     = "0001-com-ubuntu-server-focal"
          + publisher = "Canonical"
          + sku       = "20_04-lts"
          + version   = "latest"
        }

      + storage_os_disk {
          + caching                   = "ReadWrite"
          + create_option             = "FromImage"
          + disk_size_gb              = (known after apply)
          + managed_disk_id           = (known after apply)
          + managed_disk_type         = "Standard_LRS"
          + name                      = "bsh-tst-we-001-disk"
          + os_type                   = (known after apply)
          + write_accelerator_enabled = false
        }
    }

  # azurerm_virtual_machine.main[1] will be created
  + resource "azurerm_virtual_machine" "main" {
      + availability_set_id              = (known after apply)
      + delete_data_disks_on_termination = true
      + delete_os_disk_on_termination    = true
      + id                               = (known after apply)
      + license_type                     = (known after apply)
      + location                         = "westeurope"
      + name                             = "bsh-tst-we-002-vm"
      + network_interface_ids            = (known after apply)
      + resource_group_name              = "bsh-tst-we-rg"
      + tags                             = {
          + "managedBy" = "Terraform"
          + "owner"     = "catalin.marin"
          + "project"   = "bsh"
          + "region"    = "WestEurope"
        }
      + vm_size                          = "Standard_DS1_v2"

      + os_profile {
          # At least one attribute in this block is (or was) sensitive,
          # so its contents will not be displayed.
        }

      + os_profile_linux_config {
          + disable_password_authentication = false
        }

      + storage_image_reference {
          + offer     = "0001-com-ubuntu-server-jammy"
          + publisher = "Canonical"
          + sku       = "22_04-lts"
          + version   = "latest"
        }

      + storage_os_disk {
          + caching                   = "ReadWrite"
          + create_option             = "FromImage"
          + disk_size_gb              = (known after apply)
          + managed_disk_id           = (known after apply)
          + managed_disk_type         = "Standard_LRS"
          + name                      = "bsh-tst-we-002-disk"
          + os_type                   = (known after apply)
          + write_accelerator_enabled = false
        }
    }

  # azurerm_virtual_machine_run_command.ping[0] will be created
  + resource "azurerm_virtual_machine_run_command" "ping" {
      + id                 = (known after apply)
      + instance_view      = (known after apply)
      + location           = "westeurope"
      + name               = "bsh-tst-we-001-ping"
      + virtual_machine_id = (known after apply)

      + source {
          + script = (known after apply)
        }
    }

  # azurerm_virtual_machine_run_command.ping[1] will be created
  + resource "azurerm_virtual_machine_run_command" "ping" {
      + id                 = (known after apply)
      + instance_view      = (known after apply)
      + location           = "westeurope"
      + name               = "bsh-tst-we-002-ping"
      + virtual_machine_id = (known after apply)

      + source {
          + script = (known after apply)
        }
    }

  # azurerm_virtual_network.primary will be created
  + resource "azurerm_virtual_network" "primary" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "westeurope"
      + name                = "bsh-tst-we-vnet"
      + resource_group_name = "bsh-tst-we-rg"
      + subnet              = (known after apply)
      + tags                = {
          + "managedBy" = "Terraform"
          + "owner"     = "catalin.marin"
          + "project"   = "bsh"
          + "region"    = "WestEurope"
        }
    }

  # random_password.vm_passwords[0] will be created
  + resource "random_password" "vm_passwords" {
      + bcrypt_hash = (sensitive value)
      + id          = (known after apply)
      + length      = 24
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (sensitive value)
      + special     = false
      + upper       = true
    }

  # random_password.vm_passwords[1] will be created
  + resource "random_password" "vm_passwords" {
      + bcrypt_hash = (sensitive value)
      + id          = (known after apply)
      + length      = 24
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (sensitive value)
      + special     = false
      + upper       = true
    }

Plan: 11 to add, 0 to change, 0 to destroy.
Changes to Outputs:
  + ping_outputs   = [
      + (known after apply),
      + (known after apply),
    ]
  + vm_credentials = [
      + {
          + password    = (known after apply)
          + ping_output = (known after apply)
          + vm_name     = "bsh-tst-we-001-vm"
        },
      + {
          + password    = (known after apply)
          + ping_output = (known after apply)
          + vm_name     = "bsh-tst-we-002-vm"
        },
    ]
random_password.vm_passwords[1]: Creating...random_password.vm_passwords[0]: Creating...random_password.vm_passwords[0]: Creation complete after 0s [id=none]random_password.vm_passwords[1]: Creation complete after 0s [id=none]azurerm_resource_group.primary: Creating...azurerm_resource_group.primary: Still creating... [10s elapsed]azurerm_resource_group.primary: Creation complete after 12s [id=/subscriptions/set_subscription_id/resourceGroups/bsh-tst-we-rg]azurerm_virtual_network.primary: Creating...azurerm_virtual_network.primary: Creation complete after 8s [id=/subscriptions/set_subscription_id/resourceGroups/bsh-tst-we-rg/providers/Microsoft.Network/virtualNetworks/bsh-tst-we-vnet]azurerm_subnet.primary: Creating...azurerm_subnet.primary: Creation complete after 8s [id=/subscriptions/set_subscription_id/resourceGroups/bsh-tst-we-rg/providers/Microsoft.Network/virtualNetworks/bsh-tst-we-vnet/subnets/bsh-tst-we-subnet]azurerm_network_interface.primary[0]: Creating...azurerm_network_interface.primary[1]: Creating...azurerm_network_interface.primary[0]: Still creating... [10s elapsed]azurerm_network_interface.primary[1]: Still creating... [10s elapsed]azurerm_network_interface.primary[0]: Creation complete after 15s [id=/subscriptions/set_subscription_id/resourceGroups/bsh-tst-we-rg/providers/Microsoft.Network/networkInterfaces/bsh-tst-we-001-nic]azurerm_network_interface.primary[1]: Still creating... [20s elapsed]azurerm_network_interface.primary[1]: Creation complete after 27s [id=/subscriptions/set_subscription_id/resourceGroups/bsh-tst-we-rg/providers/Microsoft.Network/networkInterfaces/bsh-tst-we-002-nic]azurerm_virtual_machine.main[0]: Creating...azurerm_virtual_machine.main[1]: Creating...azurerm_virtual_machine.main[0]: Still creating... [10s elapsed]azurerm_virtual_machine.main[1]: Still creating... [10s elapsed]azurerm_virtual_machine.main[1]: Creation complete after 17s [id=/subscriptions/set_subscription_id/resourceGroups/bsh-tst-we-rg/providers/Microsoft.Compute/virtualMachines/bsh-tst-we-002-vm]azurerm_virtual_machine.main[0]: Still creating... [20s elapsed]azurerm_virtual_machine.main[0]: Still creating... [30s elapsed]azurerm_virtual_machine.main[0]: Still creating... [40s elapsed]azurerm_virtual_machine.main[0]: Creation complete after 50s [id=/subscriptions/set_subscription_id/resourceGroups/bsh-tst-we-rg/providers/Microsoft.Compute/virtualMachines/bsh-tst-we-001-vm]azurerm_virtual_machine_run_command.ping[1]: Creating...azurerm_virtual_machine_run_command.ping[0]: Creating...azurerm_virtual_machine_run_command.ping[0]: Still creating... [10s elapsed]azurerm_virtual_machine_run_command.ping[1]: Still creating... [10s elapsed]azurerm_virtual_machine_run_command.ping[1]: Creation complete after 11s [id=/subscriptions/set_subscription_id/resourceGroups/bsh-tst-we-rg/providers/Microsoft.Compute/virtualMachines/bsh-tst-we-002-vm/runCommands/bsh-tst-we-002-ping]azurerm_virtual_machine_run_command.ping[0]: Creation complete after 11s [id=/subscriptions/set_subscription_id/resourceGroups/bsh-tst-we-rg/providers/Microsoft.Compute/virtualMachines/bsh-tst-we-001-vm/runCommands/bsh-tst-we-001-ping]╷│ Warning: Value for undeclared variable│ │ The root module does not declare a variable named "vm_count" but a value was found in file "../envs/tst.tfvars". If you meant to use this value, add a "variable" block to the configuration.
│ │ To silence these warnings, use TF_VAR_... environment variables to provide certain "global" settings to all configurations in your organization. To reduce the verbosity of these warnings, use the -compact-warnings option.
╵Apply complete! Resources: 11 added, 0 changed, 0 destroyed.
Outputs:

ping_outputs = [
  "pass",
  "pass",
]
vm_credentials = [
  {
    "password" = "FPoziK2zyhwoU12XVThHShVu"
    "ping_output" = "pass"
    "vm_name" = "bsh-tst-we-001-vm"
  },
  {
    "password" = "hUzN3jJWpVmp3leAHxWXxcIZ"
    "ping_output" = "pass"
    "vm_name" = "bsh-tst-we-002-vm"
  },
]
